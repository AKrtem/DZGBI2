const nodemailer = require("nodemailer");
const fs = require("fs");
const path = require("path");

const sendMail = async (req, res) => {
  console.log("=== –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ===");
  console.log("req.body:", req.body);
  console.log("req.files:", req.files);
  try {
    const {
      name = "",
      email = "",
      phone = "",
      comment = "",
      cart = "[]",
    } = req.body;
    const file = req.files?.file;

    console.log("üì® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:");
    console.log("–ò–º—è:", name);
    console.log("Email:", email);
    console.log("–¢–µ–ª–µ—Ñ–æ–Ω:", phone);
    console.log("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", comment);
    console.log("–ö–æ—Ä–∑–∏–Ω–∞:", cart);
    console.log("–§–∞–π–ª:", file ? file.name : "–Ω–µ—Ç —Ñ–∞–π–ª–∞");

    const transporter = nodemailer.createTransport({
      service: "yandex",
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    });

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.EMAIL_USER,
      subject: "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞",
      text: `
–ó–∞—è–≤–∫–∞ –æ—Ç: ${name}
Email: ${email}
–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}
–ö–æ—Ä–∑–∏–Ω–∞: ${cart}
      `,
      html: `
        <h3>–ó–∞—è–≤–∫–∞ –æ—Ç: ${name}</h3>
        <p>Email: ${email}</p>
        <p>–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}</p>
        <p>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}</p>
        <h4>–ö–æ—Ä–∑–∏–Ω–∞</h4>
        <pre>${cart}</pre>
      `,
    };

    // –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —Ä–µ–∞–ª—å–Ω–æ –µ—Å—Ç—å
    if (file && file.tempFilePath) {
      const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
      const safeEmail = email.replace(/[^a-zA-Z0-9]/g, "_");
      const originalName = Buffer.from(file.name, "latin1").toString("utf8");
      const newFilename = `${safeEmail}_${timestamp}_${originalName}`;
      const newPath = path.join(__dirname, "..", "tmp", newFilename);

      fs.renameSync(file.tempFilePath, newPath);

      mailOptions.attachments = [
        {
          filename: newFilename,
          path: newPath,
        },
      ];
    }

    await transporter.sendMail(mailOptions);
    return res.status(200).send("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
    return res.status(500).send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.");
  }
};

module.exports = { sendMail };
